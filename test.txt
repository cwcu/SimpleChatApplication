Test-case 1:
1. start server
2. start client x(the table should be sent from server to x)
3. start client y(the table should be sent from server to x and y)
4. start client z(the table should be sent from server to x and y and z)
5. chat x -> y, y->z, ... , x ->z (All combinations)
6. dereg x (the table should be sent to y, z. x should receive ’ack’)
7. chat y->x (this should fail and message should be sent to server, and message has to be saved for x in the server)
8. chat z->x (same as above)
9. reg x (messages should be sent from server to x, x’s status has to be broadcasted to all the other clients)
10. x, y, z : exit

Start 1: (use 4 different windows for each of the following 4 commands respectively)
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000
python3 ChatApp.py -c Carol 127.0.0.1 1024 4000

Output 1:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send Bob Hello
>>> Message received by Bob.
>>> send Carol Hello
>>> Message received by Carol.
>>> Bob: Hello!
>>> Carol: Hello!!
>>> dereg Alice
>>> You are Offline. Bye.
>>> reg Alice 
>>> You Have Messages
>>> Bob: 1647982516.0493078 Hi
>>> Carol: 1647982521.593001 Hi!
>>> Client table updated.

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Alice: Hello
>>> send Alice Hello!
>>> Message received by Alice.
>>> send Carol Hello!
>>> Message received by Carol.
>>> Carol: Hello!!
>>> Client table updated.
>>> send Alice Hi
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.

Carol:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Alice: Hello
>>> Bob: Hello!
>>> send Alice Hello!!
>>> Message received by Alice.
>>> send Bob Hello!!
>>> Message received by Bob.
>>> Client table updated.
>>> send Alice Hi!
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.


Test-case 2:
1. start server
2. start client x (the table should be sent from server to x )
3. start client y (the table should be sent from server to x and y)
4. dereg y
5. server exit
6. send message x-> y (will fail with both y and server, so should make 5 attempts and exit)

Start 2:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000

Exit 2:
server: ctrl + c

Output 2:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send Bob Hello
>>> No ACK from Bob, message sent to server.
>>> Server not responding
>>> Exiting

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> dereg Bob
>>> You are Offline. Bye.


Test-case 3:
1. start server
2. start client x (the table should be sent from server to x )
3. start client y (the table should be sent from server to x and y)
4. start client z (the table should be sent from server to x , y and z)
5. send group message x-> y,z

Start 3:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000
python3 ChatApp.py -c Carol 127.0.0.1 1024 4000

Output 3:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send_all Welcome to Channel
>>> Message received by Server.

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Channel Message Alice: Welcome to Channel

Carol:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Channel Message Alice: Welcome to Channel


Test-case 4:
1. start server
2. start client x(the table should be sent from server to x)
3. start client y(the table should be sent from server to x and y)
4. start client z(the table should be sent from server to x and y and z)
5. dereg x
6. send group message y -> x, z
7. chat y -> x
8. chat z -> x
9. reg x

Start 4:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000
python3 ChatApp.py -c Carol 127.0.0.1 1024 4000

Output 4:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> dereg Alice
>>> You are Offline. Bye.
>>> reg Alice
>>> You Have Messages
>>> Channel Message Bob: 1647987871.428575 Welcome to Channel
>>> Bob: 1647987884.8317409 Hello
>>> Carol: 1647987890.298325 Hello!!
>>> Client table updated.

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send_all Welcome to Channel
>>> Message received by Server.
>>> send Alice Hello
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.

Carol:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Channel Message Bob: Welcome to Channel
>>> send Alice Hello!!
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.


Test-case 5:
1. start server
2. start client x
3. start client y
4. start client z
5. start client w
6. dereg x
7. dereg y
8. chat z->x
9. dereg z
10. send group message w -> x, y, z 
11. chat w -> x
12. chat w -> y
13. reg x
14. reg y
15. chat y -> z
16. reg z

Start 5:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000
python3 ChatApp.py -c Carol 127.0.0.1 1024 4000
python3 ChatApp.py -c Dave 127.0.0.1 1024 5000

Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> dereg Alice
>>> You are Offline. Bye.
>>> reg Alice
>>> You Have Messages
>>> Carol: 1647988960.81082 Hello
>>> Channel Message Dave: 1647988985.398539 Welcome to Channel
>>> Dave: 1647989015.692829 Hello!!
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> dereg Bob
>>> You are Offline. Bye.
>>> reg Bob
>>> You Have Messages
>>> Channel Message Dave: 1647988985.399373 Welcome to Channel
>>> Dave: 1647989030.010526 Hello!!
>>> Client table updated.
>>> send Carol Hi 
>>> No ACK from Carol, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.

Carol:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send Alice Hello 
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> dereg Carol
>>> You are Offline. Bye.
>>> reg Carol
>>> You Have Messages
>>> Channel Message Dave: 1647988985.3998778 Welcome to Channel
>>> Bob: 1647989068.503232 Hi
>>> Client table updated.

Dave:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send_all Welcome to Channel
>>> Message received by Server.
>>> send Alice Hello!!
>>> No ACK from Alice, message sent to server.
>>> Messages received by the server and saved
>>> send Bob Hello!!
>>> No ACK from Bob, message sent to server.
>>> Messages received by the server and saved
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.

Test-case 6:
1. start server
2. start client x
3. chat x -> x

Start 6:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000

Output 6:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> send Alice Hello, Alice!
>>> Alice: Hello, Alice!


Test-case 7:
1. start server
2. start client x
3. start client y
4. x dereg y

Start 7:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000

Output 7:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> dereg Bob
>>> invalid name for de-registration, should be Alice

Bob:
>>> Welcome, You are registered.
>>> Client table updated.


Test-case 8:
1. start server
2. start client x with name 'Alice'
3. start client y with the same name 'Alice'

Start 8:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Alice 127.0.0.1 1024 3000

Output 8:
Alice (port 2000):
>>> Welcome, You are registered.
>>> Client table updated.

Alice (port 3000):
>>> Registration request rejected - name Alice used


Test-case 9: (?)
1. start server
2. start client x
3. start client y
4. server exit
5. dereg x
6. chat x -> y
7. chat y -> x

Start 9:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000

Exit 9:
server: ctrl + c

Output 9:
Alice:

Bob:



Test-case 10:
1. start server
2. start client x
3. start client y
4. start client z
5. server exit
6. send group message x -> y, z

Start 10:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000
python3 ChatApp.py -c Carol 127.0.0.1 1024 4000

Exit 10:
server: ctrl + c

Output 10:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> Client table updated.
>>> send_all Welcome to Channel
>>> Server not responding.

Bob:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.

Carol:
>>> Welcome, You are registered.
>>> Client table updated.


Test-case 11:
1. start server
2. start client x
3. start client y
4. client y exits (via silent leave)
5. chat x -> y

Start 11:
python3 ChatApp.py -s 1024
python3 ChatApp.py -c Alice 127.0.0.1 1024 2000
python3 ChatApp.py -c Bob 127.0.0.1 1024 3000

Exit 11:
client y: ctrl + c

Output 11:
Alice:
>>> Welcome, You are registered.
>>> Client table updated.
>>> Client table updated.
>>> send Bob Hello
>>> No ACK from Bob, message sent to server.
>>> Client table updated.
>>> Messages received by the server and saved
